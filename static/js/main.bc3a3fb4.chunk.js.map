{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","brand","type","id","style","cursor","onClick","toggleMode","role","htmlFor","placeholder","TextForm","useState","text","setText","findLength","item","length","color","heading","value","onChange","event","target","rows","newText","toUpperCase","showAlert","console","log","match","toLowerCase","text1","document","getElementById","navigator","clipboard","writeText","split","Alert","alert","word","lower","charAt","slice","capitalized","msg","defaultProps","title","aboutText","App","setMode","setAlert","message","setTimeout","body","backgroundColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bc3a3fb4.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function Navbar(props) {\r\n\r\n\r\n\r\n// const changeHTitle = ()=>{\r\n//   document.title(\"Home - TextUtils\");\r\n\r\n// }\r\n\r\n// const changeAbTitle = ()=>{\r\n//   document.title(\"About - TextUtils\");\r\n\r\n\r\n// }\r\n\r\n\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">{props.brand}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link active\"  aria-current=\"page\" to=\"/\">Home</Link> */}\r\n                <a className=\"nav-link active\"  aria-current=\"page\" href=\"/\">Home</a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                {/* <Link className=\"nav-link\"  to=\"/about\">About</Link> */}\r\n              </li>\r\n            </ul>\r\n            <div className={`form-check form-switch me-2 text-${props.mode===\"light\" ? \"dark\": \"light\"}`}>\r\n              <input className=\"form-check-input\" style={{cursor: \"pointer\"}} onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n              <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n            </div>\r\n            <form className=\"d-flex \">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-primary\" type=\"submit\">Search</button>\r\n            </form>\r\n            \r\n          </div>\r\n        </div>\r\n      </nav>\r\n    )\r\n}\r\n\r\nNavbar.propTypes = {\r\n    title: PropTypes.string,\r\n    aboutText: PropTypes.string\r\n  };\r\n\r\n  Navbar.defaultProps = {\r\n    title: 'Set Title',\r\n    aboutText: 'Set About Us'\r\n  };","import React, { useState} from 'react'\r\n// import {CopyToClipboard} from 'react-copy-to-clipboard'\r\n\r\nexport default function TextForm(props) {\r\n    // const tableRef = useRef(null);\r\n    const [text, setText] = useState('');\r\n    // const [copied, setCopied] = useState(false);\r\n\r\n    const handleUpClick = () => {\r\n        // console.log(\"Uppercase was clicked\");\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Text Coverted to upperCase\", \"success\");\r\n\r\n        }\r\n        const handleLoClick = () => {\r\n            // console.log(\"Uppercase was clicked\");\r\n           console.log(text.match(/[\\d]/g)) ;\r\n            let newText = text.toLowerCase();\r\n            setText(newText);\r\n\r\n                props.showAlert(\"Text Coverted to lowerCase\", \"success\");\r\n            \r\n            }\r\n        const handleClearClick = () => {\r\n            // console.log(\"Uppercase was clicked\");\r\n            let newText = \"\";\r\n            setText(newText);\r\n        props.showAlert(\"Text Cleared\", \"success\");\r\n\r\n            }\r\n        // const copyToClipboard = (e) => {\r\n        //     const code =tableRef.current.innerHTML;\r\n        //     console.log('code', code);\r\n        //     document.execCommand(\"copy\", String);\r\n        //     e.target.focus();\r\n        //     setText(\"Copied!\");\r\n        //     };\r\n            \r\n    const handleOnChange = (event) => {\r\n        // console.log(\"On change\");~\r\n       setText(event.target.value);\r\n        \r\n    }\r\n    const handleCopy = () =>{\r\n        var text1 = document.getElementById('input');\r\n        navigator.clipboard.writeText(text1.value);\r\n\r\n            props.showAlert(\"Copied to Clipboard\", \"success\");\r\n    }\r\n    const findLength = (item) => (item==null ? 0 : item.length);\r\n    // text = \"kjhdhhjb\"; // wrong way to change the state\r\n    // setText(\"Enter text\"); // right way to change the state\r\n    return (\r\n        <>\r\n        <div>\r\n            <h1 style={{color: props.mode===\"dark\" ? \"white\": \"black\"}}>{props.heading}</h1>\r\n   <div className=\"mb-3\">\r\n       <textarea className=\"form-control\" placeholder=\"Enter text here\" value={text}  onChange={handleOnChange} id=\"input\" rows=\"8\"></textarea>\r\n   </div>\r\n   <button className=\"btn btn-primary m-1\" onClick={handleUpClick}>Convert to UpperCase</button>\r\n   <button className=\"btn btn-primary m-1\" onClick={handleLoClick}>Convert to LowerCase</button>\r\n   <button className=\"btn btn-primary m-1\" onClick={handleClearClick}>Clear Text</button>\r\n   <button className=\"btn btn-primary m-1\" onClick={handleCopy}>Copy Text</button>\r\n\r\n  {/* <CopyToClipboard text = {text} onCopy={() => setCopied(true)}> \r\n  <button className=\"btn btn-primary m-1\" >Copy To Clipboard</button>\r\n  </CopyToClipboard>\r\n   {copied} */}\r\n   \r\n        </div>\r\n        <div className=\"container my-3 \" style={{color: props.mode===\"dark\" ? \"white\": \"black\"}}>\r\n            <h2>Text Summary:</h2>\r\n            <p>{text === \"\" ? 0 : text.split(\" \").length} words, {text.length} characters,\r\n            {findLength(text.match(/[\\d]/g))} digits,{findLength(text.match(/\\056/g))} sentences,\r\n            {findLength(text.match(/[A-Z]/g))} UpperCase, {findLength(text.match(/[a-z]/g))} LowerCase,\r\n            {findLength(text.match(/[\\s]/g))} Spaces,{findLength(text.match(/[aeiou]/g))} Vowels,\r\n            {findLength(text.match(/[bcdfghjklmnpqrstvwxyz]/g))} Consonants</p>\r\n            <p>{text === \"\" ? 0 : 0.008 * text.split(\" \").length} <span className=\"text-danger\">Minutes Read</span></p>\r\n            \r\n            <h2>Preview:</h2>\r\n            <p>{text.length>0?text: \"Enter something in textBox above to preview it here.\"}</p>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n    const capitalized = (word) =>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitalized(props.alert.type)}</strong>: {props.alert.msg}\r\n           \r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Routes,\n//   Route,\n//   Link\n// } from \"react-router-dom\";\n\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  // const [title, setTitle] = useState(\"Home - TextUtils\");\n\n\n  const showAlert = (message,type) =>{\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n const toggleMode = () =>{\n   if(mode==='light'){\n     setMode('dark');\n     document.body.style.backgroundColor = \"#042743\";\n     showAlert(\"Dark Mode has been enabled.\", \"success\");\n   }\n   else{\n    setMode('light');\n    document.body.style.backgroundColor = \"white\";\n    showAlert(\"Light Mode has been enabled.\", \"success\");\n\n\n   }\n }\n\n\n\n\n  return (\n    <>\n    {/* <nav>\n      <p>FAW</p>\n      <ul>\n      <li>Home</li>\n      <li>About</li>\n      <li>Contact</li>\n      <li>Services</li>\n      </ul>\n    </nav> */}\n   {/* <Router> */}\n      <Navbar brand=\"TextUtils\"  aboutText=\"About Us\" mode={mode} toggleMode= {toggleMode}/>\n      <Alert alert={alert}/>\n      <div className=\"container col-md-7\">\n      {/* <About /> */}\n       <TextForm showAlert={showAlert} heading=\"Text Analyzer\" mode={mode} />\n      {/* <Routes>\n            <Route exact path=\"/about\" element={<About />}/>\n              \n            \n            <Route exact path=\"/\" element=  {<TextForm showAlert={showAlert} heading=\"Text Analyzer\" mode={mode} />} />\n          \n           \n      </Routes>  */}\n      </div>\n    {/* </Router> */}\n\n    \n    {/* <Navbar/> */}\n    {/* <section className=\"row container-fluid mt-4\">\n      <div className=\"col-md-6\">\n        <h1>Hi! I am Muneeb</h1>\n        <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit. Repellendus debitis voluptate corporis \n          placeat earum eaque doloremque nisi facere, magnam illum! Et, eligendi culpa qui obcaecati praesentium \n          accusamus cum vero, adipisci, deserunt natus officiis cumque cupiditate dolorum eius ex. Corrupti \n          consequatur deleniti at dolores. Sit commodi beatae molestiae alias quos est odio veritatis consequuntur\n          aliquid ex accusantium explicabo tempore magnam quam nemo, deserunt veniam! Dolores, nemo amet!\n           Cum commodi distinctio amet! Ex, temporibus. Modi ex fugiat, corporis quasi dolorem quisquam neque quia\n           animi odio, culpa incidunt aperiam,\n          assumenda exercitationem nostrum rerum officiis est amet voluptate velit voluptatum saepe ea ipsam \n          error?</p>\n\n      </div>\n      <div className=\"col-md-6\">\n        <h1>Hi! I am Full Stack Web Developer</h1>\n        <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Reiciendis accusantium veritatis iusto \n          eaque laborum laboriosam magnam excepturi minus delectus! Dolorum obcaecati accusamus voluptate laborum,\n           perferendis cum debitis nulla reprehenderit omnis incidunt eum alias ad nostrum. Recusandae harum\n           veritatis asperiores fugit! Omnis cupiditate at repudiandae iusto ipsum? Animi cupiditate quis numquam!\n           </p>\n\n      </div>\n    </section> */}\n\n\n\n\n\n\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}